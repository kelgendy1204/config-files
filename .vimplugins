" required for Vundle starting
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Indent lines
Plugin 'Yggdroot/indentLine'

" let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

" Bottom bar theme
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" For navigation tree
Plugin 'scrooloose/nerdtree'

" For nerdtree with git integration
Plugin 'Xuyuanp/nerdtree-git-plugin'

" For comments
Plugin 'scrooloose/nerdcommenter'

" For syntax of any kind of files
Plugin 'vim-syntastic/syntastic'

" For javascript syntax
Plugin 'pangloss/vim-javascript'

" For react syntax
Plugin 'mxw/vim-jsx'

" For file open in directory
Plugin 'kien/ctrlp.vim'

" Hybrid theme
Plugin 'kristijanhusak/vim-hybrid-material'

" Solarized theme
Plugin 'altercation/vim-colors-solarized'

" Gruvbox theme
Plugin 'morhetz/gruvbox'

" PaperColor theme
Plugin 'NLKNguyen/papercolor-theme'

" ayu theme
Plugin 'ayu-theme/ayu-vim'

" Surround code with anything
Plugin 'tpope/vim-surround'

" For git gutter
Plugin 'airblade/vim-gitgutter'

" For eslint integration
Plugin 'w0rp/ale'

" For project global search
Plugin 'mileszs/ack.vim'

" For brackets pairing
Plugin 'jiangmiao/auto-pairs'

" For git integration
Plugin 'tpope/vim-fugitive'

" Fuzzy search for color schemes
Plugin 'flazz/vim-colorschemes'

" For multicursors
Plugin 'terryma/vim-multiple-cursors'

" Other snippets
Plugin 'honza/vim-snippets'

" Vim script for text filtering and alignment
Plugin 'godlygeek/tabular'

" Vim snippets
Plugin 'SirVer/ultisnips'

" React snippets
Plugin 'epilande/vim-react-snippets'

" Auto completion plugin
Plugin 'Valloric/YouCompleteMe'

" For buffers handling, extracting them to tabs, name the tabs and moving them
Plugin 'vim-ctrlspace/vim-ctrlspace'

" Prettier plugin
Plugin 'prettier/vim-prettier', { 'do': 'yarn install' }

" Tabbar plugin
Plugin 'majutsushi/tagbar'

" All of your Plugins must be added before the following line
call vundle#end()

" required after Vundle ending
filetype plugin indent on

" ===================================================================== "
" Plugin settings
" ===================================================================== "

" airline config
let g:airline_powerline_fonts            = 1
" let g:airline#extensions#tabline#enabled = 1

" enable bold and italic
let g:enable_bold_font   = 1
let g:enable_italic_font = 1

" gitgutter configuration
let g:gitgutter_enabled       = 1
let g:gitgutter_signs_enabled = 1

" ctrlp configuration
let g:ctrlp_show_hidden   = 1
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
let g:ctrlp_max_files     = 0

" nerdtree configuration
let g:NERDSpaceDelims    = 1
let g:NERDTreeQuitOnOpen = 0
let g:NERDTreeChDirMode  = 1
let g:NERDTreeShowHidden = 1
let g:NERDTreeIgnore     = ['\.swp$']

" Indent lines configurations
let g:indentLine_char    = '┆'
let g:indentLine_enabled = 0

" Prettier configuration
let g:prettier#config#print_width           = 100
let g:prettier#config#tab_width             = 4
let g:prettier#config#use_tabs              = 'false'
let g:prettier#config#semi                  = 'true'
let g:prettier#config#single_quote          = 'true'
let g:prettier#config#bracket_spacing       = 'true'
let g:prettier#config#jsx_bracket_same_line = 'false'
let g:prettier#config#arrow_parens          = 'avoid'
let g:prettier#config#trailing_comma        = 'none'

" colorscheme solarized
" set background=dark
" let g:solarized_contrast='high'
" let g:solarized_termcolors=256
" let g:airline_solarized_bg='dark'

" hybrid theme
" set background=dark
" colorscheme hybrid_material
" let g:airline_theme = 'hybrid'

" gruvbox theme
" colorscheme gruvbox
" set background=dark
" let g:gruvbox_bold = 1
" let g:gruvbox_italic = 1
" let g:gruvbox_contrast_dark = 'hard'

" PaperColor theme
set background=dark
colorscheme PaperColor
let g:airline_theme = 'papercolor'

" set termguicolors
" let ayucolor="dark"
" let ayucolor="light"
" let ayucolor="mirage"
" colorscheme ayu

" ctrl-space setup
if has("gui_running")
    " Settings for MacVim and Inconsolata font
    let g:CtrlSpaceSymbols = { "File": "◯", "CTab": "▣", "Tabs": "▢" }
endif

if executable("ag")
    let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
else
    echo "silversearcher-ag package (ag command) is Required"
endif

let g:CtrlSpaceSearchTiming = 500

" Syntastic configuration
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Vim javascript configuration
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_ngdoc = 1
let g:javascript_plugin_flow = 1

" ===================================================================== "
" Key mapping for plugins
" ===================================================================== "

" Toggle nerd tree
noremap <leader>ne :NERDTreeToggle<CR>

" view the current buffer in NERDTree:
nnoremap <leader>nf :NERDTreeFind<cr>

" toggle nerdtree in the dir of the current buffer
nnoremap <leader>nn :NERDTreeToggle %<CR>

" Tabularize -^-
nnoremap <Leader>t :Tab<Space>/
vnoremap <Leader>t :Tab<Space>/

" Prettier key map
nmap <Leader><Leader>p <Plug>(Prettier)

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<c-j>"

" Toggle tagbar
nmap <Leader><Leader>t :TagbarToggle<CR>
